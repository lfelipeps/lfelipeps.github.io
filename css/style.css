body, h1, h2, ul, li, p, dd, dt, dl {
  margin: 0px;
  padding: 0px;
}

.amplia{
  font-size: 40px;
}

img {
  display: block;
  max-width: 100%;
}

ul {
  list-style: none;
}

body {
  background: #faf6ed;
  color: #222;
  -webkit-font-smoothing: antialiased;
  display: grid;
  grid-template-columns: 1fr 120px minmax(300px, 800px) 1fr;
}

.menu {
  grid-column: 3 / 5;
  margin-top: 2rem;
  margin-bottom: 2rem;
  background: #FB5;
}

.menu ul {
  display: flex;
  flex-wrap: wrap;
  padding: 10px;
}

.menu li a {
  display: block;
  padding: 10px;
  margin-right: 10px;
  color: #222;
  text-decoration: none;
  font-family: 'IBM Plex Mono', monospace;
  font-weight: bold;
  text-transform: uppercase;
  font-size: 0.875rem;
  letter-spacing: .1em;
}

.grid-section {
  grid-column: 2 / 4;
  width: 100%;
  box-sizing: border-box;
  padding: 10px;
  display: grid;
  grid-template-columns: 90px 300px 1fr;
  grid-gap: 20px;
  margin-bottom: 4rem;
}

.titulo {
  font-family: 'Playfair Display SC', georgia;
  font-size: 6rem;
  line-height: 1;
  font-weight: 400;
  margin-bottom: 1rem;
  grid-column: 1 / 4;
}

.animais h2 {
  font-family: 'IBM Plex Mono', monospace;
  font-size: 1rem;
  text-transform: uppercase;
  letter-spacing: .1em;
  margin-bottom: 1rem;
  color: #E54;
}

.animais h2::before {
  content: '';
  display: inline-block;
  width: 40px;
  height: 10px;
  margin-right: 10px;
  background: #FB5;
}

.animais p {
  font-family: Helvetica, Arial;
  line-height: 1.2;
  margin-bottom: 1rem;
}

.animais-lista {
  height: 370px;
  overflow-y: scroll;
  grid-column: 2;
  cursor: pointer;
}

.animais-lista::-webkit-scrollbar {
  width: 18px;
}

.animais-lista::-webkit-scrollbar-thumb {
  background: #FB5;
  border-left: 4px solid #faf6ed;
  border-right: 4px solid #faf6ed;
}

.animais-lista::-webkit-scrollbar-track {
  background: #faf6ed;
}

.animais-descricao {
  grid-column: 3;
}

.animais-descricao section {
  margin-bottom: 3rem;
}

.faq-lista {
  grid-column: 2 / 4
}

.faq-lista dt {
  font-family: 'IBM Plex Mono', monospace;
  font-weight: bold;
  margin-top: 2rem;
  margin-bottom: .5rem;
  color: #E54;
}

.faq-lista dt::before {
  content: '';
  display: inline-block;
  width: 20px;
  height: 10px;
  margin-right: 10px;
  background: #FB5;
}

.faq-lista dd {
  font-family: Helvetica, Arial;
  margin-bottom: .5rem;
  margin-left: 30px;
}

.mapa {
  grid-column: 2;
}

.dados {
  grid-column: 3;
}

.dados li {
  margin-bottom: 1rem;
  font-family: Helvetica, Arial;
}

.dados li::before {
  content: '';
  display: inline-block;
  width: 20px;
  height: 10px;
  margin-right: 10px;
  background: #FB5;
}

.copy {
  grid-column: 3/5;
  margin-bottom: 2rem;
  background: #FB5;
}

.copy p {
  padding: 20px;
  font-family: 'IBM Plex Mono', monospace;
  font-weight: bold;
}

@media (max-width: 700px) {
  body {
    grid-template-columns: 1fr;
  }
  .menu, .grid-section, .copy {
    grid-column: 1;
  }
  .grid-section {
    grid-template-columns: 100px 1fr;
    grid-gap: 10px;
  }
  .animais-lista {
    grid-column: 1;
  }
  .faq-lista, .dados, .mapa {
    grid-column: 1 / 3;
  }
  .grid-section h1 {
    font-size: 3rem;
  }
  .menu {
    margin-top: 0px;
  }
  .copy {
    margin-bottom: 0px;
  }
}

/* -------------------- */
.js .js-scroll{
  opacity: 0;
  transform: translate3d(-30px, 0, 0);
  transition: 1s; 
}

.js .js-scroll.ativo{
  opacity: 1;
  transform: translate3d(0, 0, 0);
}

/* -------------------- */
.js .js-accordion dt{
  cursor: pointer;
}

.js .js-accordion dt::after{
  content: "⮟";
  margin-left: 10px;
}

.js .js-accordion dt.ativa-accordion::after{
  content: "⮝";
}

.js .js-accordion dd{
  display: none; /*Escondendo as DD de descrição dos FAQs */
}

.js .js-accordion dd.ativa-accordion{
  display: block; /*Fazendo as informações escodidas reaparecerem.*/
  border: 1px solid black;
  border-radius: 10px;
  padding: 15px;
  animation: slideDown 1s forwards; /*O evento "show" foi criado mais a baixo no KeyFrames e o Forwards serve para impedir que a animação fique ocorrendo em Loop. */
}

/*A propriedade abaixo permite criar uma animação com parametros de um ponto inicial "FROM" e um ponto final "TO".
Para tal, utilize o @keyframes dando um nome a função e os termos de inicio e termino.*/
@keyframes slideDown{
  from{ /*Valores de inicio do elemento que possuir esta animação.*/
    opacity: 0;
    max-height: 0;
  }
  to{ /* Valores de termino do elemento que possuir esta animação. */
    opacity: 1;
    max-height: 80px;
  }
}

/* -------------------- */
.js .js-tabdescricao section {
  display: none; /* Escondendo as Sections de descrição dos animais */
}

.js-tabdescricao section.ativo {
  display: block !important; /*Fazendo reaparecer as sections escondidas quando esta classe estiver ativa. A propriedade "!important" serve para dar prioridade a esta linha caso tenha sido declarado alguma outra propriedade para este elemento ou no HTML ou mais abaixo no CSS.*/
  animation: show 1s forwards; /*O evento "show" foi criado mais a baixo no KeyFrames e o Forwards serve para impedir que a animação fique ocorrendo em Loop. */
}

/*A propriedade abaixo permite criar uma animação com parametros de um ponto inicial "FROM" e um ponto final "TO".
Para tal, utilize o @keyframes dando um nome a função e os termos de inicio e termino.*/
@keyframes show {
  from { /*Valores de inicio do elemento que possuir esta animação.*/
    opacity: 0;
    transform: translate3d(-30px, 0, 0);
  }
  to { /* Valores de termino do elemento que possuir esta animação. */
    opacity: 1;
    transform: translate3d(0px, 0, 0);
  }
}
